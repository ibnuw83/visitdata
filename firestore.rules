rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isRole(role) {
      return isSignedIn() && request.auth.token.role == role;
    }

    function isDataOwner() {
      return request.auth.uid == resource.data.uid;
    }
    
    function isAssignedToDestination(destinationId) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.assignedLocations.hasAny([destinationId]);
    }

    // Settings: Public can read, admin can write
    match /settings/app {
      allow read;
      allow write: if isRole('admin');
    }

    // Users: Must be signed in to read their own data. Only admins can write/list.
    match /users/{userId} {
      allow read: if isSignedIn() && (isRole('admin') || request.auth.uid == userId);
      allow list: if isRole('admin');
      allow update: if isRole('admin') || request.auth.uid == userId;
      allow create, delete: if isRole('admin');
    }

    // Categories: Public can read, admin can write.
    match /categories/{categoryId} {
      allow read;
      allow write: if isRole('admin');
    }
    
    // Countries: Public can read, admin can write.
    match /countries/{countryId} {
        allow read;
        allow write: if isRole('admin');
    }

    // Destinations: Public can read, admin can write.
    match /destinations/{destinationId} {
      allow read;
      allow write: if isRole('admin');
      
      // Visit Data Subcollection
      match /visits/{visitId} {
        allow read;
        allow create: if isRole('admin') || (isRole('pengelola') && isAssignedToDestination(destinationId));
        
        // Pengelola can only update if data is not locked.
        // Admin can update regardless of lock status.
        allow update: if isRole('admin') || (isRole('pengelola') && isAssignedToDestination(destinationId) && !resource.data.locked);
        
        allow delete: if isRole('admin');
      }
    }
    
    // Collection Group query for visits
    match /{path=**}/visits/{visitId} {
        allow read;
    }

    // Unlock Requests: Pengelola can create, Admin can read/update.
    match /unlock-requests/{requestId} {
        allow read: if isRole('admin');
        allow create: if isRole('pengelola');
        allow update, delete: if isRole('admin');
    }
  }
}
