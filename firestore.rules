
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }

    function isRole(role) {
      return isSignedIn() && request.auth.token.role == role;
    }

    function isDataOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAssignedToDest(destId) {
      return destId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.assignedLocations;
    }

    // --- Public Read Rules ---
    // Anyone can read destinations, categories, public app settings, and aggregated visit data.
    match /destinations/{destinationId} {
      allow read: if true;
      allow write: if isRole('admin');
    }
    
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isRole('admin');
    }

    match /settings/app {
        allow read: if true;
        allow write: if isRole('admin');
    }
    
    match /countries/{countryId} {
      allow read: if true;
      allow write: if isRole('admin');
    }

    // This allows collectionGroup query for 'visits' by the public.
    match /{path=**}/visits/{visitId} {
       allow read: if true;
    }

    // --- User Profile Rules ---
    match /users/{userId} {
      // Anyone signed in can read any user's profile (for display names, etc.)
      allow read: if isSignedIn();
      // Only the user themselves or an admin can update their profile.
      allow write: if isDataOwner(userId) || isRole('admin');
    }
    
    // --- Data Entry (Visits) Rules ---
    match /destinations/{destinationId}/visits/{visitId} {
      // Read access is public via collectionGroup rule above.
      
      // Allow write for admins OR for assigned managers if the data is not locked.
      allow write: if isRole('admin') || 
                      (isRole('pengelola') && 
                       isAssignedToDest(destinationId) && 
                       !resource.data.locked);
    }
    
    // --- Unlock Request Rules ---
    match /unlock-requests/{requestId} {
        allow read, write: if isRole('admin');
        allow create: if isRole('pengelola');
    }
    
  }
}
