/**
 * @file Firestore Security Rules (v2.1 - Final Production Ready)
 * @description
 * Versi ini final dan stabil untuk sistem pendataan wisata, dengan perbaikan:
 * ‚úÖ Login admin & user pertama kali berjalan lancar
 * ‚úÖ Admin bisa melihat semua user di dashboard
 * ‚úÖ Pengelola hanya bisa mengubah destinasi yang ditugaskan
 * ‚úÖ Publik hanya bisa membaca data umum (destinasi, kategori, negara)
 * ‚úÖ Aman dari eksploitasi list/get tanpa izin
 *
 * Struktur Utama Koleksi:
 * - /users/{userId}
 * - /destinations/{destinationId}
 * - /destinations/{destinationId}/visits/{visitId}
 * - /categories/{categoryId}
 * - /countries/{countryId}
 * - /unlock-requests/{requestId}
 * - /settings/app
 */

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /* =============================
     * üîß GLOBAL HELPER FUNCTIONS
     * ============================= */

    function isSignedIn() {
      return request.auth != null;
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    function userExists() {
        return exists(/databases/$(database)/documents/users/$(request.auth.uid));
    }

    function isAdmin() {
      return isSignedIn() && userExists() && getUserData().role == 'admin';
    }

    function isPengelola() {
      return isSignedIn() && userExists() && getUserData().role == 'pengelola';
    }

    function isPengelolaForDestination(destinationId) {
      // Handles both array and map data structures for assignedLocations
       return isPengelola() && (
            (destinationId in getUserData().assignedLocations) ||
            (getUserData().assignedLocations is list && destinationId in getUserData().assignedLocations)
       );
    }

    /* =============================
     * üë§ USERS COLLECTION
     * ============================= */
    match /users/{userId} {
      // Pengguna boleh membaca & memperbarui profil dirinya sendiri
      allow get, update: if isSignedIn() && request.auth.uid == userId;

      // ‚úÖ Admin boleh melihat semua user di dashboard
      allow list: if isAdmin();

      // Pengguna boleh membuat profilnya sendiri saat sign-up
      allow create: if isSignedIn() && request.auth.uid == userId;

      // Hanya admin bisa menghapus user
      allow delete: if isAdmin();
    }

    /* =============================
     * üèùÔ∏è DESTINATIONS COLLECTION
     * ============================= */
    match /destinations/{destinationId} {
      // Publik bisa baca semua data destinasi
      allow get, list: if true;

      // Hanya Admin yang bisa membuat/mengubah/menghapus destinasi
      allow write: if isAdmin();
    }

    /* =============================
     * üìä VISITS SUBCOLLECTION
     * ============================= */
    match /destinations/{destinationId}/visits/{visitId} {
      // Publik bisa baca data kunjungan
      allow get, list: if true;

      // Admin bisa mengunci/membuka data.
      // Pengelola bisa input/edit data kunjungan untuk destinasi mereka jika tidak terkunci.
      allow write: if isAdmin() || (isPengelolaForDestination(destinationId) && resource.data.locked == false);
    }

    /* =============================
     * üß≠ CATEGORIES & COUNTRIES
     * ============================= */
    match /categories/{categoryId} {
      allow get, list: if true;
      allow write: if isAdmin();
    }

    match /countries/{countryId} {
      allow get, list: if true;
      allow write: if isAdmin();
    }
    
    /* =============================
     * üîì UNLOCK REQUESTS COLLECTION
     * ============================= */
    match /unlock-requests/{requestId} {
      // Pengelola destinasi boleh membuat permintaan buka kunci
      allow create: if isPengelola() &&
                    request.resource.data.requestedBy == request.auth.uid;

      // Pengguna boleh melihat permintaan yang mereka buat sendiri
      allow get: if isSignedIn() && resource.data.requestedBy == request.auth.uid;

      // ‚úÖ Admin bisa melihat semua permintaan dan mengubah status
      allow list, update: if isAdmin();
      
      allow delete: if false;
    }

    /* =============================
     * ‚öôÔ∏è SETTINGS DOCUMENT
     * ============================= */
    match /settings/app {
      // Semua pengguna (publik) boleh baca pengaturan umum
      allow get: if true;

      // Admin boleh memperbarui pengaturan global
      allow write: if isAdmin();
    }
  }
}