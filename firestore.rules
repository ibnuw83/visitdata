rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isAuth() {
      return request.auth != null;
    }

    function isUser(uid) {
      return isAuth() && request.auth.uid == uid;
    }

    // Get user role from the 'users' collection
    function getRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    function isAdmin() {
      return isAuth() && getRole() == 'admin';
    }
    
    // Check if it's the very first write to a collection (for seeding)
    function isFirstWrite(collectionName) {
      return !exists(/databases/$(database)/documents/$(collectionName));
    }
    
    // --- User Profiles ---
    match /users/{userId} {
      allow read;
      // Anyone can create their own user profile document
      allow create: if isUser(userId);
      // Users can update their own profile, Admins can update any
      allow update: if isUser(userId) || isAdmin();
      // Only admins can delete users
      allow delete: if isAdmin();
    }
    
    // --- App Settings ---
    match /settings/app {
        allow read;
        // Allow write only for admins
        allow write: if isAdmin();
    }

    // --- Main Data Collections (Destinations, Categories, Countries) ---
    match /{collectionName=destinations|categories|countries}/{docId} {
        allow read;
        // Allow create for seeding (if collection is empty) OR if user is admin
        allow create: if isAdmin();
        // Allow update and delete only for admins
        allow update, delete: if isAdmin();
    }
    
    // --- Visit Data (Sub-collection) ---
    match /destinations/{destinationId}/visits/{visitId} {
      allow read;
      // Allow create if user is admin (for seeding/adding new year)
      allow create: if isAdmin();
      // Allow update if admin OR if pengelola and data is not locked
      allow update: if isAdmin() || (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'pengelola' && resource.data.locked == false);
      // Allow delete only for admins (e.g., deleting a year's data)
      allow delete: if isAdmin();
    }

    // --- Unlock Requests ---
    match /unlock-requests/{requestId} {
      allow read: if isAuth();
      // Pengelola can create requests
      allow create: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'pengelola';
      // Admin can update requests (to approve/reject)
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
  }
}
