rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }
    function isUser(uid) {
      return isAuth() && request.auth.uid == uid;
    }
    function userRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }
    function isAdmin() {
      return isAuth() && userRole() == 'admin';
    }

    // Collection: /users/{userId}
    // Rules for user profile documents.
    match /users/{userId} {
      allow read: if true;
      allow create: if isUser(userId);
      allow update: if isUser(userId) || isAdmin();
      allow delete: if isAdmin();
    }

    // Collection: /destinations/{destinationId}
    // Rules for tourist destination documents.
    match /destinations/{destinationId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Collection: /categories/{categoryId}
    // Rules for destination categories.
    match /categories/{categoryId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    // Collection: /countries/{countryId}
    // Rules for countries.
    match /countries/{countryId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    // Subcollection: /destinations/{destinationId}/visits/{visitId}
    // Rules for monthly visit data. `pengelola` can only update, `admin` can do anything.
    match /destinations/{destinationId}/visits/{visitId} {
      allow read: if true;
      
      // Admin can do anything
      // Pengelola can only update if data is not locked and they are assigned to the location.
      allow write: if isAdmin() || 
        (
            request.resource.data.locked == false &&
            get(/databases/$(database)/documents/users/$(request.auth.uid)).data.assignedLocations.hasAny([destinationId])
        );
    }
    
    // Collection: /unlock-requests/{requestId}
    // `pengelola` can create, `admin` can read and update (approve/reject).
    match /unlock-requests/{requestId} {
        allow read, update: if isAdmin();
        allow create: if isAuth() && userRole() == 'pengelola';
        allow delete: if false; // Requests should not be deleted, only their status updated.
    }

    // Document: /settings/app
    // Only admins can read and write app settings.
    match /settings/app {
        allow read: if true;
        allow write: if isAdmin();
    }
  }
}
