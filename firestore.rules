rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isOwner(userId) {
        return isAuth() && request.auth.uid == userId;
    }
    
    function isPengelolaFor(destinationId) {
        return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.assignedLocations.hasAny([destinationId]);
    }

    match /users/{userId} {
      allow read: if true;
      allow create: if isOwner(userId);
      allow update, delete: if isAdmin() || isOwner(userId);
    }

    match /destinations/{destinationId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /categories/{categoryId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    match /countries/{countryId} {
        allow read: if true;
        allow write: if isAdmin();
    }
    
    match /destinations/{destinationId}/visits/{visitId} {
        allow read: if true;
        allow create, write: if isAdmin() || (isPengelolaFor(destinationId) && !resource.data.locked);
    }
    
    match /unlock-requests/{requestId} {
        allow read: if isAuth();
        allow create: if isAuth();
        allow update, delete: if isAdmin();
    }
    
    match /settings/app {
        allow read: if true;
        allow write: if isAdmin();
    }
  }
}
