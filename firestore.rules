/**
 * @file Firestore Security Rules (v2.2 - Final with Custom Claims)
 * @description
 * Versi ini menggunakan Custom Claims untuk otorisasi peran, yang lebih aman,
 * cepat, dan andal daripada membaca dokumen Firestore.
 * ‚úÖ Login admin & user pertama kali berjalan lancar
 * ‚úÖ Admin bisa melihat semua user di dashboard
 * ‚úÖ Pengelola hanya bisa mengubah destinasi yang ditugaskan
 * ‚úÖ Publik hanya bisa membaca data umum (destinasi, kategori, negara)
 */

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /* =============================
     * üîß GLOBAL HELPER FUNCTIONS
     * ============================= */

    function isSignedIn() {
      return request.auth != null;
    }

    // ‚úÖ Menggunakan Custom Claims dari token otentikasi, bukan membaca dokumen
    function isAdmin() {
      return isSignedIn() && request.auth.token.role == 'admin';
    }

    function isPengelola() {
        return isSignedIn() && request.auth.token.role == 'pengelola';
    }
    
    // Fungsi ini masih perlu membaca dokumen untuk melihat lokasi yang ditugaskan
    function isPengelolaForDestination(destinationId) {
      return isPengelola() && (destinationId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.assignedLocations);
    }
    
    /* =============================
     * üë§ USERS COLLECTION
     * ============================= */
    match /users/{userId} {
      // Pengguna boleh membaca & memperbarui profil dirinya sendiri
      allow get, update: if isSignedIn() && request.auth.uid == userId;

      // ‚úÖ Admin boleh melihat semua user di dashboard
      allow list: if isAdmin();

      // Pengguna boleh membuat profilnya saat pendaftaran
      allow create: if isSignedIn() && request.auth.uid == userId;

      // Hanya admin bisa menghapus user
      allow delete: if isAdmin();
    }

    /* =============================
     * üèùÔ∏è DESTINATIONS COLLECTION
     * ============================= */
    match /destinations/{destinationId} {
      // Publik bisa baca semua data destinasi
      allow get, list: if true;

      // Admin bisa mengelola semua destinasi
      // Pengelola hanya bisa mengubah destinasi yang ditugaskan
      allow create, update, delete: if isAdmin() || isPengelolaForDestination(destinationId);
    }

    /* =============================
     * üìä VISITS SUBCOLLECTION
     * ============================= */
    match /destinations/{destinationId}/visits/{visitId} {
      // Publik bisa baca data kunjungan
      allow get, list: if true;

      // Admin bisa mengelola semua data kunjungan
      // Pengelola hanya bisa input/edit data kunjungan yang datanya tidak terkunci
      allow create, update: if isAdmin() || 
                                (isPengelolaForDestination(destinationId) && resource.data.locked == false);
                                
      // Hanya admin yang boleh mengunci/membuka data
      allow update: if isAdmin() && request.resource.data.keys().hasOnly(['locked', 'lastUpdatedBy']);

      allow delete: if isAdmin();
    }

    /* =============================
     * üß≠ CATEGORIES & COUNTRIES
     * ============================= */
    match /categories/{categoryId} {
      allow get, list: if true;
      allow write: if isAdmin();
    }
    match /countries/{countryId} {
      allow get, list: if true;
      allow write: if isAdmin();
    }

    /* =============================
     * üîì UNLOCK REQUESTS COLLECTION
     * ============================= */
    match /unlock-requests/{requestId} {
      // Pengelola boleh membuat permintaan untuk destinasi mereka
      allow create: if isPengelola() && 
                      isPengelolaForDestination(request.resource.data.destinationId) &&
                      request.resource.data.requestedBy == request.auth.uid;

      // Admin bisa melihat semua permintaan dan mengubah statusnya
      allow list, get, update: if isAdmin();
      
      allow delete: if false;
    }

    /* =============================
     * ‚öôÔ∏è SETTINGS DOCUMENT
     * ============================= */
    match /settings/app {
      allow get: if true;
      allow write: if isAdmin();
    }
    
    // Blokir semua akses lain secara default
    match /{path=**} {
      allow read, write: if false;
    }
  }
}
