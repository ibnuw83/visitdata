rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isSignedIn() && getUserData(request.auth.uid).role == 'admin';
    }

    function isPengelola() {
        return isSignedIn() && getUserData(request.auth.uid).role == 'pengelola';
    }

    function isManagerOf(destinationId) {
      let userData = getUserData(request.auth.uid);
      return userData.role == 'pengelola' && destinationId in userData.assignedLocations;
    }

    // --- User Profiles ---
    match /users/{userId} {
      // Admin can do anything.
      // Users can read their own profile.
      allow read: if isAdmin() || isUser(userId);
      
      // Admin can create/delete users.
      // Note: User creation should ideally happen via a trusted server process (Admin SDK).
      allow create, delete: if isAdmin();
      
      // Admin can update any profile.
      // Users can update their own name, and avatarUrl. They cannot change their role or email.
      allow update: if isAdmin() || (
        isUser(userId) &&
        request.resource.data.keys().hasOnly(['name', 'avatarUrl'])
      );
    }

    // --- Destinations, Categories, Countries (Admin-managed) ---
    match /destinations/{destinationId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    
    match /categories/{categoryId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    match /countries/{countryId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    
    // --- Visit Data ---
    match /destinations/{destinationId}/visits/{visitId} {
        // Any signed-in user can read visit data for reports/dashboard.
        allow read: if isSignedIn();
        
        // Admin can write anything.
        // Pengelola can write if they manage the destination AND the data is not locked.
        allow write: if isAdmin() || (
            isManagerOf(destinationId) && get(/databases/$(database)/documents/destinations/$(destinationId)/visits/$(visitId)).data.locked == false
        );
    }
    
    // --- Unlock Requests ---
    match /unlock-requests/{requestId} {
        // Admin can read all requests.
        // Pengelola can only read their own requests.
        allow read: if isAdmin() || (isPengelola() && resource.data.requestedBy == request.auth.uid);
        
        // Pengelola can create new requests.
        // Ensure they are requesting for a destination they manage.
        allow create: if isPengelola() && isManagerOf(request.resource.data.destinationId);
        
        // Only Admins can approve or reject requests.
        allow update: if isAdmin();
        
        // Nobody can delete requests for audit purposes.
        allow delete: if false;
    }
    
    // --- App Settings ---
    match /settings/app {
        // Anyone (even unauthenticated users) can read app settings for the public-facing pages.
        allow read: if true;
        // Only admins can change app settings.
        allow write: if isAdmin();
    }
  }
}
