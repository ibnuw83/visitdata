
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /* =============================
     * üîß GLOBAL HELPER FUNCTIONS
     * ============================= */
    function isSignedIn() {
      return request.auth != null;
    }

    function isAdmin() {
      // ‚úÖ Cek 'role' dari Custom Claim di token, bukan dari dokumen.
      // Ini lebih cepat, aman, dan andal.
      return isSignedIn() && request.auth.token.role == 'admin';
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isPengelola() {
        return isSignedIn() && request.auth.token.role == 'pengelola';
    }
    
    function isAssignedToDest(destinationId) {
      // 'resource' adalah dokumen user yang ada di Firestore
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.assignedLocations.hasAny([destinationId]);
    }

    /* =============================
     * üë§ USERS COLLECTION
     * ============================= */
    match /users/{userId} {
      // Pengguna boleh membaca profilnya sendiri.
      allow get: if isOwner(userId);
      
      // ‚úÖ Admin bisa membaca daftar semua pengguna.
      allow list: if isAdmin();
      
      // Pengguna boleh membuat profilnya sendiri saat mendaftar.
      // Izinkan update oleh admin (misal: mengubah peran).
      allow create, update: if isOwner(userId) || isAdmin();
      
      // Hanya admin yang bisa menghapus pengguna.
      allow delete: if isAdmin();
    }

    /* =============================
     * üèùÔ∏è DESTINATIONS & VISITS
     * ============================= */
    match /destinations/{destinationId} {
      // Semua orang (termasuk publik) bisa melihat data destinasi.
      allow get, list: if true;

      // Hanya Admin yang bisa membuat, mengedit, atau menghapus data master destinasi.
      allow create, update, delete: if isAdmin();

      match /visits/{visitId} {
        // Semua orang bisa melihat data kunjungan.
        allow get, list: if true;

        // Admin atau Pengelola yang ditugaskan boleh mengubah data kunjungan.
        // Cek `locked` status di dokumen yang ada (resource.data) sebelum update.
        allow create: if (isAdmin() || (isPengelola() && isAssignedToDest(destinationId)));
        allow update: if ( (isAdmin() || (isPengelola() && isAssignedToDest(destinationId))) && !resource.data.locked );
        
        // Admin boleh mengunci/membuka (update `locked` field) kapan saja.
        allow update: if isAdmin() && request.resource.data.keys().hasOnly(['locked', 'lastUpdatedBy']);

        // Tidak ada yang boleh menghapus data kunjungan dari client.
        allow delete: if false;
      }
    }
    
    /* =============================
     * üìö CATEGORIES, COUNTRIES
     * ============================= */
    match /categories/{categoryId} {
      // Data publik, hanya bisa dibaca.
      allow get, list: if true;
      allow write: if isAdmin();
    }
    
    match /countries/{countryId} {
      // Data publik, hanya bisa dibaca.
      allow get, list: if true;
      allow write: if isAdmin();
    }

    /* =============================
     * üîì UNLOCK REQUESTS
     * ============================= */
    match /unlock-requests/{requestId} {
      // Pengelola yang login bisa membuat request untuk dirinya sendiri.
      allow create: if isPengelola() && request.resource.data.requestedBy == request.auth.uid;
      
      // Pengguna bisa melihat request yang dia buat. Admin bisa melihat semua.
      allow get, list: if isAdmin() || (isPengelola() && resource.data.requestedBy == request.auth.uid);
      
      // Hanya admin yang bisa menyetujui/menolak permintaan.
      allow update: if isAdmin();
      
      allow delete: if false;
    }

    /* =============================
     * ‚öôÔ∏è SETTINGS
     * ============================= */
    match /settings/app {
      // Publik boleh baca pengaturan tampilan.
      allow get: if true;
      // Hanya admin yang boleh mengubah.
      allow write: if isAdmin();
    }
  }
}
