
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isUserAuthenticated() {
      return request.auth != null;
    }
    
    function isUserRole(role) {
      return isUserAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }

    function isDataOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isManagerOfDestination(destinationId) {
      return destinationId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.assignedLocations;
    }
    
    function isVisitDataUnlocked(destinationId, year, month) {
      let visitId = string(destinationId) + '-' + string(year) + '-' + string(month);
      return get(/databases/$(database)/documents/destinations/$(destinationId)/visits/$(visitId)).data.locked == false;
    }

    // --- Public Access ---
    // Anyone can read general app settings and active destination info
    match /settings/app {
      allow read: if true;
      allow write: if isUserRole('admin');
    }
    
    match /destinations/{destinationId} {
      allow read: if resource.data.status == 'aktif';
      allow write: if isUserRole('admin');
    }
    
    match /categories/{categoryId} {
        allow read: if true;
        allow write: if isUserRole('admin');
    }

    // --- Collection Group Rules ---
    // This allows public read access to all 'visits' documents for the public dashboard
    match /{path=**}/visits/{visitId} {
       allow read: if true;
       // Write access is more specific, handled in the user-specific rules below.
       allow write: if false; 
    }


    // --- Authenticated User Access ---
    match /users/{userId} {
      allow read: if isUserAuthenticated();
      allow create: if isUserRole('admin');
      allow update: if isUserRole('admin') || isDataOwner(userId);
      allow delete: if isUserRole('admin');
    }
    
    // Authenticated users can read all destinations for lists/dropdowns
    match /destinations/{destinationId} {
        allow read: if isUserAuthenticated();
    }
    
    match /countries/{countryId} {
      allow read: if isUserAuthenticated();
      allow write: if isUserRole('admin');
    }

    // --- Data Entry Rules for Managers ---
    match /destinations/{destinationId}/visits/{visitId} {
      // Admins can write/update any visit data
      // Managers can write/update if they are assigned to the location AND the data is not locked.
      allow write: if isUserRole('admin') || (isManagerOfDestination(destinationId) && isVisitDataUnlocked(destinationId, request.resource.data.year, request.resource.data.month));
    }

    // --- Unlock Requests ---
    match /unlock-requests/{requestId} {
      allow read: if isUserRole('admin');
      allow create: if isManagerOfDestination(request.resource.data.destinationId);
      allow update, delete: if isUserRole('admin');
    }
  }
}
